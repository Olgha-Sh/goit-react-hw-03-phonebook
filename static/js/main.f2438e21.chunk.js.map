{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","className","style","contactForm","htmlFor","generateID","type","placeholder","onChange","formBtn","Component","ContactItem","onDeleteContact","contactItem","contact","onClick","listBtn","ContactList","items","contactList","map","el","key","id","defaultProps","Filter","onChangeFilter","styles","title","filterInput","App","contacts","filter","filterContacts","toLowerCase","includes","changeFilter","addContact","contactToAdd","find","alert","deleteContact","notesFromLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2438e21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"ContactItem_listBtn__hPWgc\",\"contactItem\":\"ContactItem_contactItem__3-0lS\",\"contact\":\"ContactItem_contact__2ZS4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2SPtk\",\"formBtn\":\"ContactForm_formBtn__f2lt_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__bp4Gx\",\"contactList\":\"ContactList_contactList__3SGms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__p4F2B\",\"filterInput\":\"Filter_filterInput__32wxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3RKXH\"};","import React, { Component } from 'react';\nimport generateID from 'uuid/v4';\nimport T from 'prop-types';\nimport style from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={style.contactForm}>\n        <label htmlFor={generateID()}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={generateID()}>\n          Number\n          <input\n            type=\"number\"\n            placeholder=\"Enter phone number\"\n            value={number}\n            name=\"number\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={style.formBtn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <div className={style.contactItem}>\n      <p className={style.contact}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDeleteContact} className={style.listBtn}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  name: T.string.isRequired,\n  number: T.string.isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport T from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n  return (\n    <ul className={style.contactList}>\n      {items.map(el => (\n        <li key={el.id} className={style.contactItem}>\n          <ContactItem\n            name={el.name}\n            number={el.number}\n            onDeleteContact={() => onDeleteContact(el.id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\nContactList.defaultProps = {\n  items: [],\n};\nContactList.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      name: T.string,\n      number: T.string,\n    }),\n  ),\n  onDeleteContact: T.func.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <p className={styles.title}>Find contacts by name...</p>\n    <input\n      className={styles.filterInput}\n      type=\"text\"\n      placeholder=\"Type to filter...\"\n      value={value}\n      onChange={onChangeFilter}\n    />\n  </>\n);\n\nFilter.propTypes = {\n  value: T.string.isRequired,\n  onChangeFilter: T.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport generateID from 'uuid/v4';\nimport styles from './App.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const notesFromLS = localStorage.getItem('contacts');\n    if (notesFromLS) {\n      this.setState({ contacts: JSON.parse(notesFromLS) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contactToAdd = { name, number, id: generateID() };\n    if (name && number) {\n      if (\n        contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase(),\n        )\n      ) {\n        alert(`${name} is already in your contacts`);\n        return;\n      }\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    } else {\n      alert('One of the fields is incorrect!');\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.filterContacts(contacts, filter);\n    return (\n      <div>\n        <h2 className={styles.title}>Phonebook</h2>\n        <ContactForm onAddContact={this.addContact} />\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n          id={generateID()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}